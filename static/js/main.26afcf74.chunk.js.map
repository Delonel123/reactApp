{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","api/api.js","redux/auth-reducer.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","components/Chat/ChatPage.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/Navbar/Navbar.module.css","components/common/FormsControle/FormsControls.module.css","components/common/FormsControle/FormsControls.jsx","utils/validators/validators.js","components/Header/Header.module.css","assets/images/preloader.svg","components/common/Preloader/Preloader.js","assets/images/user.jpg","redux/profile-reducer.js"],"names":["SEND_MASSAGE","initialState","dialogs","id","name","massages","massage","sendMassageCreator","newMassageBody","type","dialogsReducer","state","action","body","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","folowSuccess","userID","unfolowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","a","userAPI","getUsers","data","items","totalCount","followInfolowFlow","apiMethod","actionCreator","resultCode","folow","bind","unfolow","usersReducer","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","userId","console","warn","profileAPI","savePhoto","phoroFile","formData","FormData","append","put","getStatus","updateStatus","status","saveProfile","profile","authAPI","me","login","email","password","rememberme","logout","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","messages","length","stopSubmit","_error","loginout","authsReducer","Navbar","className","s","nav","item","to","activeClassName","activeLink","Header","props","header","src","loginBlock","onClick","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","validate","requried","placeholder","component","Input","formSummerError","rememberMe","SET_SUCCESS","initialized","appReducer","ws","WebSocket","Chat","Massages","useState","setMassages","useEffect","addEventListener","e","prevMassages","JSON","parse","m","index","Massage","key","photo","userName","defoultava","message","AddMassageForm","onChange","currentTarget","value","send","ChatPage","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","fallback","Preloader","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","redusers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById","module","exports","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","Restprops","createField","validators","maxLengthCreator","maxLength","preloader","ADD_POST","SET_USERS_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likeCount","addPostActionCreator","newPost","setStatus","file","photos","getState","getUsersProfile","Promise","reject"],"mappings":"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","file":"static/js/main.26afcf74.chunk.js","sourcesContent":["const SEND_MASSAGE = 'SEND-MASSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Anton' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Sasha' }\r\n    ],\r\n    massages: [\r\n        { id: 1, massage: 'Hi' },\r\n        { id: 2, massage: 'How are you' },\r\n        { id: 3, massage: 'You stupid' }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MASSAGE: {\r\n            let body = action.newMassageBody\r\n            return {\r\n                ...state,\r\n                massages: [...state.massages, { id: 6, massage: body }],\r\n            }\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport let sendMassageCreator = (newMassageBody) => ({ type: SEND_MASSAGE,newMassageBody })\r\n\r\nexport default dialogsReducer\r\n","import { userAPI } from \"../api/api\";\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users] }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return { ...state, followingInProgress: action.isFetching ? [...state.followingInProgress, action.userID] : [state.followingInProgress.filter(id => id != action.userID)] }\r\n        default: return state\r\n\r\n\r\n\r\n    }\r\n}\r\nexport let folowSuccess = (userID) => ({ type: FOLLOW, userID })\r\nexport let unfolowSuccess = (userID) => ({ type: UNFOLLOW, userID })\r\nexport let setUsers = (users) => ({ type: SET_USERS, users })\r\nexport let setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport let setUsersTotalCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount })\r\nexport let toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport let toggleFollowingProgress = (isFetching, userID) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID })\r\n\r\n\r\n//thunk\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage))\r\n        let data = await userAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followInfolowFlow = async (dispatch, userID,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userID))\r\n    let response = await apiMethod(userID)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userID))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userID))\r\n}\r\n\r\nexport const folow = (userID) => {\r\n    return async (dispatch) => {\r\n        followInfolowFlow(dispatch,userID,userAPI.folow.bind(userAPI),folowSuccess)\r\n    }\r\n}\r\nexport const unfolow = (userID) => {\r\n    return async (dispatch) => {\r\n        followInfolowFlow(dispatch,userID,userAPI.unfolow.bind(userAPI),unfolowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer\r\n","import * as axios from 'axios'\r\nimport { login } from '../redux/auth-reducer'\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"35e25900-aa22-461a-b106-8cf6072a0eea\"\r\n    }\r\n})\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    folow(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n    },\r\n    unfolow(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('obsolet method.Pleaase use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n    savePhoto(phoroFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", phoroFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form=data'\r\n            }\r\n        })\r\n    },\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/` + userID)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`/profile`, profile)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email,password,rememberme = false){\r\n        return instance.post('auth/login',{email,password,rememberme})\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login')\r\n    },\r\n}","import { authAPI } from \"../api/api\"\r\nimport { stopSubmit } from 'redux-form'\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n\r\n}\r\n\r\nconst authsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport let setAuthUserData = (userID, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userID, email, login, isAuth } })\r\n\r\n// thunk\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me();\r\n\r\n        if (response.data.resultCode == 0) {\r\n            let { id, email, login } = response.data.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n\r\n    }\r\n}\r\nexport const login = (email, password, rememberme) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberme);\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let massage = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit(\"login\", { _error: massage }))\r\n        }\r\n    }\r\n}\r\nexport const loginout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default authsReducer\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\nimport React from 'react'\r\nconst Navbar = () => {\r\n    return (\r\n         <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/ChatPage\" activeClassName={s.activeLink}>Chat</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import s from './Header.module.css'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst Header = (props) => {\r\n    return (\r\n        \r\n        <header className={s.header}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg\"></img>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        {props.login}\r\n                        <button onClick={props.loginout}>logout</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login </NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { getAuthUserData,loginout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n     \r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {loginout })(HeaderContainer)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { requried } from '../../utils/validators/validators'\r\nimport { Input } from '../common/FormsControle/FormsControls'\r\nimport s from './../common/FormsControle/FormsControls.module.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field validate={[requried]} placeholder={\"Login\"} name={\"email\"} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field validate={[requried]} placeholder={\"Password\"} name={\"password\"} component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} />remember me\r\n            </div>\r\n            {error && <div className={s.formSummerError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { login })(Login)","import { getAuthUserData } from \"./auth-reducer\"\r\n\r\nconst SET_SUCCESS = 'SET_SUCCESS'\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport let initializedSuccess = (type) => ({ type: SET_SUCCESS, payload: { type: SET_SUCCESS } })\r\n\r\n// thunk\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\nexport default appReducer\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport defoultava from '../../assets/images/user.jpg'\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n\r\nconst ChatPage = () => {\r\n    return (\r\n        <div>\r\n            <Chat />\r\n\r\n        </div>\r\n    )\r\n}\r\nconst Chat = () => {\r\n    return (\r\n        <div>\r\n            <Massages />\r\n            <AddMassageForm />\r\n        </div>\r\n    )\r\n}\r\nconst Massages = () => {\r\n    const [massages, setMassages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener('message', (e) => {\r\n            setMassages((prevMassages) => [...prevMassages, ...JSON.parse(e.data)])\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"MassageItem\">\r\n            {massages.filter(m => m.userId === 18772 || m.userId === 18982).map((m, index) => {\r\n                return <Massage key={index} massage={m} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Massage = ({ massage }, { key }) => {\r\n    return (\r\n        <div>\r\n            {massage.photo ? <div><img src={massage.photo} className=\"Massage-avatar\" /> <b>{massage.userName}</b> </div>\r\n            : <div><img src={defoultava} className=\"Massage-avatar\" /> <b>{massage.userName}</b> </div>\r\n                \r\n        }\r\n\r\n            <hr />\r\n            {massage.message}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\nconst AddMassageForm = () => {\r\n    const [massage, setMassages] = useState('');\r\n    const sendMassage = () => {\r\n        if (massage) {\r\n            ws.send(massage)\r\n            setMassages('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <textarea onChange={(e) => setMassages(e.currentTarget.value)} value={massage}></textarea>\r\n            <div>\r\n                <button onClick={sendMassage}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ChatPage","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport React from 'react'\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { Suspense } from 'react';\nimport ChatPage from './components/Chat/ChatPage';\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <BrowserRouter>\n        <div className='app-wrapper'>\n          <HeaderContainer />\n          <Navbar />\n          <div className='app-wrapper-content'>\n            <Route path=\"/dialog\" render={() => <Suspense fallback={<div>Загрузка...</div>}> <DialogsContainer /> </Suspense>} />\n            <Route path=\"/profile/:userId?\" render={() => <Suspense fallback={<div>Загрузка...</div>}> <ProfileContainer /> </Suspense>} />\n            <Route path=\"/users\" render={() =>  <Suspense fallback={<div>Загрузка...</div>}> <UsersContainer /> </Suspense> } />\n            <Route path=\"/login\" render={() => <LoginPage />} />\n            <Route path=\"/ChatPage\" render={() => <ChatPage />} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\n\n\nexport default connect(mapStateToProps, { initializeApp })(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authsReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    usersPage:usersReducer,\r\n    auth: authsReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// addPost('New Post333')\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3dmmk\",\"item\":\"Navbar_item__3M4Kb\",\"activeLink\":\"Navbar_activeLink__3cdRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Av-b\",\"error\":\"FormsControls_error__29hqv\",\"formSummerError\":\"FormsControls_formSummerError__1QKY8\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport s from './FormsControls.module.css'\r\n\r\nlet FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span> {meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...Restprops } = props;\r\n    return <FormControl {...props}><textarea {...input} {...Restprops} /></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, children, ...Restprops } = props;\r\n    return <FormControl {...props}><input {...input} {...Restprops} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}","export const requried = (value) =>{\r\n    if(value) return undefined\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max Length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__rj1_a\",\"loginBlock\":\"Header_loginBlock__lmvEI\"};","export default __webpack_public_path__ + \"static/media/preloader.b60fe7b6.svg\";","import preloader from './../../../assets/images/preloader.svg'\r\nimport React from 'react'\r\nlet Preloader = (props) =>{\r\n    return(\r\n        <div>\r\n    <img src={preloader} />\r\n</div>\r\n    )\r\n}\r\nexport default Preloader\r\n","export default __webpack_public_path__ + \"static/media/user.6d6cb0f1.jpg\";","import { stopSubmit } from \"redux-form\"\r\nimport { profileAPI, userAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, massage: 'Its my first post', likeCount: 20 },\r\n        { id: 2, massage: 'Hello', likeCount: 2 },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                massage: action.newPost,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\nexport let addPostActionCreator = (newPost) => ({ type: ADD_POST, newPost })\r\nexport let setUsersProfile = (profile) => ({ type: SET_USERS_PROFILE, profile })\r\nexport let setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport let setPhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\n\r\n\r\n//THUNKS\r\nexport let savePhoto = (file) => {\r\n    return async (dispatch) => {\r\n        let response = await userAPI.savePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setPhotoSuccess(response.data.data.photos))\r\n        }\r\n    }\r\n}\r\nexport let saveProfile = (profile) => {\r\n    return async (dispatch,getState) => {\r\n        const userID = getState().auth.userID\r\n        let response = await profileAPI.saveProfile(profile)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUsersProfile(userID))\r\n        }else{\r\n            dispatch(stopSubmit(\"editProfile\",{_error: response.data.messages[0]}))\r\n            return Promise.reject();\r\n        }\r\n    }\r\n}\r\nexport let getStatus = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userID)\r\n        dispatch(setStatus(response.data))\r\n    }\r\n}\r\nexport let updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n}\r\nexport let getUsersProfile = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await userAPI.getProfile(userID)\r\n        dispatch(setUsersProfile(response.data))\r\n    }\r\n}\r\nexport default profileReducer\r\n"],"sourceRoot":""}