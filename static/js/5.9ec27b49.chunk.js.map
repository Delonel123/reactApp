{"version":3,"sources":["components/Users/Users.module.css","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionCount","Math","ceil","useState","portNumber","setPortNumber","leftPorttionNumber","rightPortionNumber","pages","i","push","onClick","filter","p","map","className","s","selectedPage","User","props","name","to","u","id","src","photos","small","userPhoto","img","followed","disabled","followingInProgress","some","unfolow","folow","status","Users","users","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","PageNumber","requestUsers","this","Preloader","React","Component","connect","setCurrentPage","toggleFollowingProgress"],"mappings":"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","file":"static/js/5.9ec27b49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__QVS_7\",\"selectedPage\":\"Users_selectedPage__2MDci\"};","import React from 'react'\r\nimport { useState } from 'react'\r\nimport s from './Users.module.css'\r\n\r\nlet Paginator = ({ totalUsersCount, pageSize, currentPage, onPageChanged }) => {\r\n    let portionCount = Math.ceil((totalUsersCount) / pageSize)\r\n    let [portNumber, setPortNumber] = useState(1);\r\n    let leftPorttionNumber = (portNumber - 1) * pageSize + 1;\r\n    let rightPortionNumber = portNumber * pageSize\r\n    let pages = [];\r\n    for (let i = 1; i <= portionCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            {/* {pages.map(p => {\r\n                return <span className={currentPage == p && s.selectedPage}\r\n                    onClick={() => {onPageChanged(p) }}\r\n                >{p}</span>\r\n            })} */}\r\n            {\r\n                leftPorttionNumber > 1 && <button onClick ={() => setPortNumber(portNumber - 1)}>PREV</button>\r\n            }\r\n            {\r\n                pages.filter(p => p >= leftPorttionNumber && p <= rightPortionNumber).map(p => {\r\n                   return <span className={currentPage == p && s.selectedPage}\r\n                        onClick={() => { onPageChanged(p) }}\r\n                    >{p} </span>\r\n                })\r\n            }\r\n            {rightPortionNumber < totalUsersCount && <button onClick={() => setPortNumber(portNumber + 1)} >NEXT</button>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nlet User = (props) => {\r\n    return (\r\n        <div className={s.name}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + props.u.id}>\r\n                        <img src={props.u.photos.small != null ? props.u.photos.small : userPhoto} className={s.img} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === props.u.id)} onClick={() => { props.unfolow(props.u.id) }}> Unfollow </button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === props.u.id)} onClick={() => { props.folow(props.u.id) }}> Follow </button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{props.u.name}</div>\r\n                    <div>{props.u.status}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react'\r\nimport Paginator from './Paginator'\r\nimport User from './User'\r\n\r\nlet Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n            {\r\n                props.users.map((u) =>\r\n                    <User key = {u.id} followingInProgress={props.followingInProgress} u={u} unfolow={props.unfolow} folow ={props.folow} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Users","export const getUsers = (state) =>{\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) =>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) =>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) =>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) =>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) =>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { folow, unfolow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { getUsers, getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount } from '../../redux/users-selectors'\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.PageNumber, this.props.pageSize);\r\n    }\r\n    onPageChanged = (PageNumber) => {\r\n        this.props.requestUsers(PageNumber, this.props.pageSize);\r\n\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfolow={this.props.unfolow}\r\n                folow={this.props.folow}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { folow, unfolow, setCurrentPage, toggleFollowingProgress, requestUsers })(UsersContainer);"],"sourceRoot":""}